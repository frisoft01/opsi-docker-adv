version: '3.4'

x-restart-policy: &restart-policy
  restart: unless-stopped

x-common-variables: &common-variables
  TZ: Europe/Berlin

x-common-mysql-variables: &common-mysql-variables
  MYSQL_DATABASE: opsi
  MYSQL_USER: opsi
  MYSQL_PASSWORD: a@4Bfs2Vh@XQ2

x-common-redis-variables: &common-redis-variables
  REDIS_PASSWORD: y8Zq!W4Dmh8&

x-common-grafana-variables: &common-grafana-variables
  GF_SECURITY_ADMIN_USER: admin
  GF_SECURITY_ADMIN_PASSWORD: 1&AZ1@3VAbXm8

# volumes:
  # mysql_data:
    # driver: local
  # redis_data:
    # driver: local
  # opsi_data:
    # driver: local
  # grafana_data:
    # driver: local
volumes:
  mysql_data:
    driver: local # Define the driver and options under the volume name
    driver_opts:
      type: none
      device: /data/mysql_data
      o: bind
  redis_data:
    driver: local # Define the driver and options under the volume name
    driver_opts:
      type: none
      device: /data/redis_data
      o: bind
  opsi_data:
    driver: local # Define the driver and options under the volume name
    driver_opts:
      type: none
      device: /data/opsi_data
      o: bind
  grafana_data:
    driver: local # Define the driver and options under the volume name
    driver_opts:
      type: none
      device: /data/grafana_data
      o: bind


services:
  mysql:
    image: mariadb:10.7
    <<: *restart-policy
    command: --max_connections=1000 --max_allowed_packet=256M --sort_buffer_size=4M
    environment:
       <<: [*common-variables, *common-mysql-variables]
       MYSQL_ROOT_PASSWORD: oareaNg6Ooz4teik
       MYSQL_INITDB_SKIP_TZINFO: 1
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redislabs/redistimeseries:latest
    <<: *restart-policy
    command: sh -c "redis-server --requirepass $$REDIS_PASSWORD --loadmodule /usr/lib/redis/modules/redistimeseries.so"
    environment:
      <<: [*common-variables, *common-redis-variables]
    volumes:
      - redis_data:/data

  grafana:
    image: grafana/grafana:latest
    <<: *restart-policy
    environment:
      <<: [*common-variables, *common-grafana-variables]
      GF_INSTALL_PLUGINS: simpod-json-datasource
      GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s:%(http_port)s/grafana"
    volumes:
      - grafana_data:/var/lib/grafana

  opsi-server:
    image: uibmz/opsi-server:4.3.18.18
    #build: .
    <<: *restart-policy
    depends_on:
      - mysql
      - redis
    ports:
      - "4447:4447"
      - "69:69/udp"
    hostname: opsi
    domainname: domain.tld
    environment:
      <<: [*common-variables, *common-mysql-variables, *common-grafana-variables, *common-redis-variables]
      MYSQL_HOST: mysql
      REDIS_HOST: redis
      GRAFANA_HOST: grafana
      OPSI_ADMIN_PASSWORD: Start2020!
      OPSI_ROOT_PASSWORD:
      # configserver / depotserver
      OPSI_HOST_ROLE: configserver
      # Run tftp server and opsipxeconfd? ("true"/"false")
      OPSI_TFTPBOOT: "true"
      # OPSI_SERVICE_ADDRESS and OPSI_HOST_KEY is needed for depotserver role only
      OPSI_SERVICE_ADDRESS:
      OPSI_HOST_KEY:
      # opsconfd config
      OPSICONFD_GRAFANA_EXTERNAL_URL: /grafana
      OPSICONFD_LOG_LEVEL: 6
      OPSICONFD_LOG_LEVEL_FILE: 4
      OPSICONFD_RESTORE_BACKUP_URL: ${OPSICONFD_RESTORE_BACKUP_URL:-}
      OPSILICSRV_URL: ${OPSILICSRV_URL:-}
      OPSILICSRV_TOKEN: ${OPSILICSRV_TOKEN:-}
    volumes:
      - opsi_data:/data
